#!/usr/bin/perl -w
#
# gen
#
# Generate the music lists.
#
# Currently, only the singles list is generated.
# Others are commented out below in main().
##

use strict;
use diagnostics;
use subs qw( syntax display_header 
             create_singleslist create_albumslist create_bandlist );
use File::Find;



# ------------
# Subroutines
# ------------

sub create_singleslist {

  my @lines;
  my @reordered;

  my $directory = "/music/Singles";

  # generate the list of files
  find sub {

      if (
             ( $_ =~ m/.MP3/ ) ||
             ( $_ =~ m/.mp3/ ) ||
             ( $_ =~ m/.mpg/ ) ||
             ( $_ =~ m/.wma/ ) ||
             ( $_ =~ m/.wmv/ )
      ) {

          # backslash escape certain characters

          $File::Find::name =~ s/([\s])/\\$1/g;
          $File::Find::name =~ s/(['])/\\$1/g;
          $File::Find::name =~ s/([&])/\\$1/g;
          $File::Find::name =~ s/([(])/\\$1/g;
          $File::Find::name =~ s/([)])/\\$1/g;
          $File::Find::name =~ s/([!])/\\$1/g;
          $File::Find::name =~ s/([\[])/\\$1/g;
          $File::Find::name =~ s/([\]])/\\$1/g;
#         print $File::Find::name . "\n";
          push(@lines, $File::Find::name);
      }

  }, $directory;


  # open a input file
  open (FILE, "> /tmp/playlist_singles")
       || die "cannot create /tmp/playlist_singles";

  foreach (@lines) {
      if ( ! ( $_ =~ m|/music/incomplete/| )) {
        print FILE $_ . "\n";
      }
  }

  # close the input file
  close (FILE) || die "cannot close /tmp/playlist_singles";
} 



sub create_albumslist {

  my @lines;
  my @reordered;

  my $directory = "/music/Albums";

  # generate the list of files
  find sub {

      if ( 
           ( $_ =~ m/.MP3/ ) || 
           ( $_ =~ m/.mp3/ ) || 
           ( $_ =~ m/.mpg/ ) || 
           ( $_ =~ m/.wma/ ) ||
           ( $_ =~ m/.wmv/ )
      ) {

          # backslash escape certain characters

          $File::Find::name =~ s/([\s])/\\$1/g;
          $File::Find::name =~ s/(['])/\\$1/g;
          $File::Find::name =~ s/([&])/\\$1/g;
          $File::Find::name =~ s/([(])/\\$1/g;
          $File::Find::name =~ s/([)])/\\$1/g;
          $File::Find::name =~ s/([!])/\\$1/g;
          $File::Find::name =~ s/([\[])/\\$1/g;
          $File::Find::name =~ s/([\]])/\\$1/g;
#         print $File::Find::name . "\n";
          push(@lines, $File::Find::name);
      }

  }, $directory;


  # open a input file
  open (FILE, "> /tmp/playlist_albums") 
       || die "cannot create /tmp/playlist_albums";

  foreach (@lines) {
      print FILE $_ . "\n";
  } 

  # close the input file
  close (FILE) || die "cannot close /tmp/playlist_albums";
}


sub create_bandlist {
  my @args = ("/usr/local/bin/genbands");
  system (@args) == 0 || warn "error w/ system call";
}


sub syntax {
  print "\nUsage: $0 \n";
}


sub display_header {

  system ( "tput clear" );
  print "----------------------------------------------------------\n";
  print "   ***   gen -- Generate the Music List \n";
  print "   ***   by Brett\n";
  print "----------------------------------------------------------\n";
  print "\n";
}




# main()
# ==============================================================
# gen all three music lists

create_singleslist;
#create_albumslist;
#create_bandlist;

print "\nDone\n";
exit;

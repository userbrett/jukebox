#!/usr/bin/perl -w
#
# ss - singles search.
#
# Display (list) all the singles that match keyword argument(s).

use strict;
use diagnostics;
use subs qw( syntax display_header create_musiclist display_musiclist );
use Switch;

# ------------
# Subroutines
# ------------

sub syntax {
  print "\nUsage: $0 [all] keyword keyword keyword ...\n\n";
  print "$0 aretha ray soul (any match plays)\n";
  print "$0 all smooth soul (all must match to play)\n";
  print "\nType \"HELP\" for more options.\n";
  exit;
}


sub display_header {

  system ( "tput clear" );
  print "----------------------------------------------------------\n";
  print "   ***   The Music Player - Singles Search\n";
  print "   ***   by Brett\n";
  print "----------------------------------------------------------\n";
  print "\n";
}


sub create_musiclist {

  my ( @args, @lines );
  my ( $arrayRef, $count, $len );
  $arrayRef = shift;
  @args = @$arrayRef;

  $len = scalar @args;
  print "Create Music Args: $len\n";

  for ( $count = 0; $count <= $len-1; $count++ ) {
    print "Arg$count: " . $args[$count] . "\n";
  }

  # (hack) the extra arg-variables
  switch ( $args[0] ) {
    case "all" {
       for ( $count = $len; $count < 10; $count++ ) {
         $args[$count] = $args[1];
#        print "Arg$count: " . $args[$count] . "\n";
       }
    }
    else {
       for ( $count = $len; $count < 10; $count++ ) {
         $args[$count] = $args[0];
#        print "Arg$count: " . $args[$count] . "\n";
       }
    }
  }


  open( HANDLE, "/tmp/playlist_singles" ) || die "can't open filehandle: $!";

  while ( <HANDLE> ) {                                                         
    switch ( $args[0] ) {
      case "all" { 
        if (
             (
               ( $_ =~ m/.mp3$/i ) || 
               ( $_ =~ m/.mpg$/i ) || 
               ( $_ =~ m/.wma$/i ) ||
               ( $_ =~ m/.wmv$/i )
             ) && (
               ( $_ =~ m/$args[1]/i ) &&
               ( $_ =~ m/$args[2]/i ) &&
               ( $_ =~ m/$args[3]/i ) &&
               ( $_ =~ m/$args[4]/i ) &&
               ( $_ =~ m/$args[5]/i ) &&
               ( $_ =~ m/$args[6]/i ) &&
               ( $_ =~ m/$args[7]/i ) &&
               ( $_ =~ m/$args[8]/i ) &&
               ( $_ =~ m/$args[9]/i )
             )
        ) {
          push(@lines, $_);
        }
      }
      else {
        if (
             (
               ( $_ =~ m/.mp3$/i ) ||
               ( $_ =~ m/.mpg$/i ) ||
               ( $_ =~ m/.wma$/i ) ||
               ( $_ =~ m/.wmv$/i )
             ) && (
               ( $_ =~ m/$args[0]/i ) ||
               ( $_ =~ m/$args[1]/i ) ||
               ( $_ =~ m/$args[2]/i ) ||
               ( $_ =~ m/$args[3]/i ) ||
               ( $_ =~ m/$args[4]/i ) ||
               ( $_ =~ m/$args[5]/i ) ||
               ( $_ =~ m/$args[6]/i ) ||
               ( $_ =~ m/$args[7]/i ) ||
               ( $_ =~ m/$args[8]/i ) ||
               ( $_ =~ m/$args[9]/i )
             )
        ) {
            push(@lines, $_);
        }
      }
    }
  }

  close (HANDLE) || die "cannot close filehandle: $!";

  return @lines;
}



sub display_musiclist {

  my @musiclist = sort @_;
  my $a = 0;

  foreach (@musiclist) {

    my $displayname = $_;
    my $char;

    $a++;

    $displayname =~ s/([\\])//g;
    $displayname =~ s|/music/Singles||;
    print $a . ". " . $displayname;
    chomp;
  }
}



# main()
# ==============================================================
#

my ( @music, @args );
my ( $arg, $len, $count, $all );



# Syntax() ?
# --------------------------
#
$len = $#ARGV + 1;
switch ( $len ) {
  case 0 { syntax(); print "0";}
  case 1  { if ( $ARGV[0] =~ m/^all$/i ) { syntax(); } }
}


# Promo :)
# --------------------------
# 
display_header;


# GetArgs()
# --------------------------
# 
while ( $arg = shift ) {
  push(@args, $arg);
}


# List()
# --------------------------
# 

display_musiclist ( create_musiclist( \@args ) );
print "\nDone\n";

exit;
